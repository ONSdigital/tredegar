<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.onsdigital</groupId>
	<artifactId>tredegar</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ONS Alpha</name>
	<description>Repository for ONS Alpha development project</description>
	<url>https://onsdigital.herokuapp.com</url>

	<properties>
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<powermock.version>1.5.6</powermock.version>
		<es.version>1.3.2</es.version>
	</properties>

	<dependencies>

        <dependency>
            <groupId>org.eclipse.mylyn.github</groupId>
            <artifactId>org.eclipse.egit.github.core</artifactId>
            <version>2.1.5</version>
        </dependency>

		<!-- Prototyping framework -->
		<dependency>
			<groupId>com.github.davidcarboni</groupId>
			<artifactId>restolino</artifactId>
			<version>0.0.26</version>
		</dependency>
		<dependency>
			<groupId>com.github.davidcarboni</groupId>
			<artifactId>resource-utils</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- Taxonomy generator -->
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>

		<!-- Elastic Search -->
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>${es.version}</version>
		</dependency>

		<!-- MongoDB -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.12.4</version>
		</dependency>

 		<!-- Encryption -->
		<dependency>
			<groupId>com.github.davidcarboni</groupId>
			<artifactId>cryptolite</artifactId>
			<version>1.2.5</version>
		</dependency>

		<!-- Prerender.io -->
		<dependency>
			<groupId>com.github.greengerong</groupId>
			<artifactId>prerender-java</artifactId>
			<version>1.6.3</version>
		</dependency>

		<!-- Spreadsheet handling -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.10.1</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.powermock</groupId> -->
		<!-- <artifactId>powermock-module-junit4</artifactId> -->
		<!-- <version>${powermock.version}</version> -->
		<!-- <scope>test</scope> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.powermock</groupId> -->
		<!-- <artifactId>powermock-api-mockito</artifactId> -->
		<!-- <version>${powermock.version}</version> -->
		<!-- <scope>test</scope> -->
		<!-- </dependency> -->

	</dependencies>

	<build>
		<resources>
			<!-- Standard resources -->
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<!-- Generated taxonomy structure -->
			<resource>
				<!-- Copies the remainder of the taxonomy. NB: the resource plugin "overwrite" 
					setting defaults to false so this won't replace any manually edited files 
					already copied in from under src/main/taxonomy_override -->
				<directory>src/main/taxonomy</directory>
				<targetPath>${project.build.directory}/taxonomy</targetPath>
			</resource>
			<!-- Pre-rendered files - we're doing everything on Prerender.io for now -->
			<!-- <resource> -->
			<!-- <directory>src/main/static</directory> -->
			<!-- <targetPath>${project.build.outputDirectory}/files/static</targetPath> -->
			<!-- </resource> -->
		</resources>
		<plugins>

			<!-- Needs Java 1.7 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<!-- This can compile the CX sass. Use the following command: -->
				<!-- mvn clean org.jasig.maven:sass-maven-plugin:update-stylesheets -->
				<!-- You may then want to merge the changes into the existing css files. -->
				<groupId>org.jasig.maven</groupId>
				<artifactId>sass-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>sass</id>
						<!-- Phase should be generated sources, change back to it -->
						<!-- <phase>generate-sources</phase> -->
						<phase>site</phase>
						<goals>
							<goal>update-stylesheets</goal>
						</goals>
						<configuration>
							<sassSourceDirectory>${basedir}/src/main/scss/ui/scss</sassSourceDirectory>
							<destination>${basedir}/src/main/resources/files/ui/scss</destination>
							<useCompass>true</useCompass>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- An assembly that includes all dependencies for deployment: -->
			<!-- <plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>com.github.davidcarboni.restolino.Main</mainClass>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->

			<!-- A folder of dependencies is used in development when reloading classes: -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<!-- Default output folder is ${project.build.directory}/dependency -->
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.jasig.maven
										</groupId>
										<artifactId>
											sass-maven-plugin
										</artifactId>
										<versionRange>
											[1.1.1,)
										</versionRange>
										<goals>
											<goal>
												update-stylesheets
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
